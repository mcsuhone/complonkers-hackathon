<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="http://www.complonkers-hackathon/slidedeck"
           xmlns="http://www.complonkers-hackathon/slidedeck"
           elementFormDefault="qualified">

  <!-- Root element for a slide deck -->
  <xs:element name="SlideDeck" type="SlideDeckType"/>

  <!-- A deck contains multiple slides -->
  <xs:complexType name="SlideDeckType">
    <xs:sequence>
      <xs:element name="Slide" type="SlideType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Definition of a single slide -->
  <xs:complexType name="SlideType">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Text" type="TextType"/>
        <xs:element name="Image" type="ImageType"/>
        <xs:element name="Chart" type="ChartType"/>
        <xs:element name="List" type="ListType"/>
        <xs:element name="Container" type="ContainerType"/>
      </xs:choice>
    </xs:sequence>
    <!-- The slide identifier from input -->
    <xs:attribute name="id" type="xs:string" use="required"/>
    <xs:attribute name="classes" type="xs:string" use="optional"/>
  </xs:complexType>

  <!-- Base component with shared attributes -->
  <xs:complexType name="BaseComponentType">
    <xs:attribute name="id" type="xs:string" use="optional"/>
    <xs:attribute name="placeholder" type="xs:string" use="optional"/>
    <xs:attribute name="classes" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>Space-separated list of Tailwind CSS classes for styling and positioning.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Text element with tag type (e.g., h1, p) -->
  <xs:simpleType name="TextTagType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="h1"/>
      <xs:enumeration value="h2"/>
      <xs:enumeration value="h3"/>
      <xs:enumeration value="p"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="TextType">
    <xs:complexContent>
      <xs:extension base="BaseComponentType">
        <xs:sequence>
          <xs:element name="Content" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="mode" use="required">
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="content"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="tag" type="TextTagType" use="optional" default="p"/>
        <xs:attribute name="textComponentId" type="xs:string" use="optional">
          <xs:annotation>
            <xs:documentation>Reference ID to a text component definition. The text renderer will use this ID to fetch the corresponding text content and styling from the text component registry/store.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Image element for placeholders; actual src/alt filled by content agent -->
  <xs:complexType name="ImageType">
    <xs:complexContent>
      <xs:extension base="BaseComponentType">
        <xs:sequence>
          <xs:element name="Content" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="mode" use="required">
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="content"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="alt" type="xs:string" use="optional"/>
        <xs:attribute name="width" type="xs:string" use="optional"/>
        <xs:attribute name="height" type="xs:string" use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Chart element for embedding D3.js-compatible charts -->
  <xs:annotation>
    <xs:documentation>
      Chart element for embedding D3.js-compatible charts. Use 'chartComponentId' to reference predefined definitions or inline 'ChartDefinition' element for bespoke D3.js configurations. Refer to D3.js XML chart definitions for details.
    </xs:documentation>
  </xs:annotation>
  <xs:simpleType name="ChartKindType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="bar"/>
      <xs:enumeration value="line"/>
      <xs:enumeration value="pie"/>
      <xs:enumeration value="scatter"/>
      <xs:enumeration value="bubble"/>
      <xs:enumeration value="network"/>
      <xs:enumeration value="treemap"/>
      <xs:enumeration value="choropleth"/>
      <xs:enumeration value="candlestick"/>
      <xs:enumeration value="heatmap"/>
      <xs:enumeration value="radar"/>
      <xs:enumeration value="sankey"/>
      <xs:enumeration value="streamgraph"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- ChartType: D3.js XML Chart Usage -->
  <xs:annotation>
    <xs:documentation>
      Chart element for embedding D3.js-compatible charts. Use 'chartComponentId' to reference predefined definitions or include an inline 'ChartDefinition' child for full configuration. Align XML to the chart component schema for data, styling, and interactions.
    </xs:documentation>
  </xs:annotation>
  <xs:complexType name="ChartType">
    <xs:complexContent>
      <xs:extension base="BaseComponentType">
        <xs:sequence>
          <xs:element name="Content" type="xs:string"/>
          <xs:element ref="ChartDefinition" minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                Inline ChartDefinition specifying full chart config, data mapping, styling, and interactions for D3.js rendering.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="mode" use="required">
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="content"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="type" type="ChartKindType" use="optional"/>
        <xs:attribute name="chartComponentId" type="xs:string" use="optional">
          <xs:annotation>
            <xs:documentation>Reference ID to a chart component definition. The chart renderer will use this ID to fetch the corresponding chart definition from the chart registry/store.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- List element with ordered/unordered flag -->
  <xs:complexType name="ListType">
    <xs:complexContent>
      <xs:extension base="BaseComponentType">
        <xs:sequence>
          <xs:element name="Content" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="mode" use="required">
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="content"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="ordered" type="xs:boolean" use="optional" default="false"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Generic container to group other components -->
  <xs:complexType name="ContainerType">
    <xs:complexContent>
      <xs:extension base="BaseComponentType">
        <xs:sequence>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="Text" type="TextType"/>
            <xs:element name="Image" type="ImageType"/>
            <xs:element name="Chart" type="ChartType"/>
            <xs:element name="List" type="ListType"/>
            <xs:element name="Container" type="ContainerType"/>
          </xs:choice>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- inlined chart definitions start -->
  <!-- Chart definitions from chart_component_schema.xsd -->
  <xs:element name="ChartDefinition" type="ChartDefinitionType">
    <xs:annotation>
      <xs:documentation>
        Chart definitions are stored in a registry/store and referenced by ID from slide layouts. The slide layout uses chartComponentId or inline ChartDefinition elements.
      </xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="ChartDefinitionType">
    <xs:sequence>
      <xs:element name="ChartConfig" type="ChartConfigType"/>
      <xs:element name="Data" type="DataType"/>
      <xs:element name="Styling" type="StylingType" minOccurs="0"/>
      <xs:element name="Interactions" type="InteractionsType" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Unique identifier for this chart definition, referenced by slides.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!-- Chart configuration -->
  <xs:complexType name="ChartConfigType">
    <xs:sequence>
      <xs:element name="Dimensions" type="DimensionsType"/>
      <xs:element name="Margins" type="MarginsType" minOccurs="0"/>
      <xs:element name="Axes" type="AxesType" minOccurs="0"/>
      <xs:element name="Legend" type="LegendType" minOccurs="0"/>
      <xs:element name="Projection" type="ProjectionType" minOccurs="0"/>
      <xs:element name="Hierarchy" type="HierarchyType" minOccurs="0"/>
      <xs:element name="Force" type="ForceType" minOccurs="0"/>
      <xs:element name="Transition" type="TransitionType" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="type" type="ChartTypeEnum" use="required"/>
    <xs:attribute name="title" type="xs:string" use="optional"/>
    <xs:attribute name="subtitle" type="xs:string" use="optional"/>
    <xs:attribute name="theme" type="xs:string" use="optional" default="default"/>
  </xs:complexType>
  <!-- Chart types enumeration -->
  <xs:simpleType name="ChartTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="bar"/>
      <xs:enumeration value="line"/>
      <xs:enumeration value="area"/>
      <xs:enumeration value="pie"/>
      <xs:enumeration value="donut"/>
      <xs:enumeration value="scatter"/>
      <xs:enumeration value="bubble"/>
      <xs:enumeration value="histogram"/>
      <xs:enumeration value="heatmap"/>
      <xs:enumeration value="treemap"/>
      <xs:enumeration value="sunburst"/>
      <xs:enumeration value="sankey"/>
      <xs:enumeration value="chord"/>
      <xs:enumeration value="force"/>
      <xs:enumeration value="network"/>
      <xs:enumeration value="tree"/>
      <xs:enumeration value="cluster"/>
      <xs:enumeration value="pack"/>
      <xs:enumeration value="partition"/>
      <xs:enumeration value="map"/>
      <xs:enumeration value="choropleth"/>
      <xs:enumeration value="contour"/>
      <xs:enumeration value="density"/>
      <xs:enumeration value="violin"/>
      <xs:enumeration value="boxplot"/>
      <xs:enumeration value="candlestick"/>
      <xs:enumeration value="radar"/>
      <xs:enumeration value="parallel"/>
      <xs:enumeration value="streamgraph"/>
      <xs:enumeration value="ridgeline"/>
      <xs:enumeration value="calendar"/>
      <xs:enumeration value="matrix"/>
      <xs:enumeration value="arc"/>
      <xs:enumeration value="ribbon"/>
    </xs:restriction>
  </xs:simpleType>
  <!-- DataType and related definitions -->
  <xs:complexType name="DataType">
    <xs:sequence>
      <xs:element name="DataSource" type="DataSourceType" maxOccurs="unbounded"/>
      <xs:element name="DataMapping" type="DataMappingType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="DataSourceType">
    <xs:sequence>
      <xs:element name="Field" type="FieldType" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="type" type="DataSourceTypeEnum" use="required"/>
    <xs:attribute name="source" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:simpleType name="DataSourceTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="table"/>
      <xs:enumeration value="inline"/>
      <xs:enumeration value="external"/>
      <xs:enumeration value="api"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="DataMappingType">
    <xs:sequence>
      <xs:element name="Mapping" type="xs:string" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="field" type="xs:string" use="required"/>
    <xs:attribute name="role" type="FieldRoleEnum" use="required"/>
    <xs:attribute name="dataType" type="DataTypeEnum" use="required"/>
  </xs:complexType>

  <xs:simpleType name="FieldType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="string"/>
      <xs:enumeration value="number"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="FieldRoleEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="dimension"/>
      <xs:enumeration value="measure"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="DataTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="string"/>
      <xs:enumeration value="integer"/>
      <xs:enumeration value="decimal"/>
      <xs:enumeration value="boolean"/>
      <xs:enumeration value="date"/>
      <xs:enumeration value="datetime"/>
    </xs:restriction>
  </xs:simpleType>
  <!-- inlined chart definitions end -->

</xs:schema>
